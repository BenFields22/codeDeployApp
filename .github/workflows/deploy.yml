name: Build and Deploy

on:
  workflow_dispatch: {}

env:
  applicationfolder: dotNetLegacy
  AWS_REGION: us-west-2
  S3BUCKET: codedeploydotnetstack-webappdeploymentbucket-13cquf634vd7q
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

jobs:
  build:
    name: Build and Package
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup MSBuild Path
        uses: warrenbuckley/Setup-MSBuild@v1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2

      - name: Restore NuGet Packages
        working-directory: ${{ env.applicationfolder }}
        run: nuget restore webapplication3.sln

      - name: Build and Publish Web App
        working-directory: ${{ env.applicationfolder }}
        run: msbuild webApplication3.sln /p:Configuration=Release /p:DeployOnBuild=true /p:PublishProfile=FolderProfile

      - name: Upload Artifact
        uses: actions/upload-artifact@v1.0.0
        working-directory: ${{ env.applicationfolder }}
        with:
          name: published_webapp
          path: bin\Release\Publish

      # - name: Upload Artifact to s3
      #   working-directory: ${{ env.applicationfolder }}/target
      #   run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/

  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   environment: Dev
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         role-session-name: GitHub-Action-Role
  #         aws-region: ${{ env.AWS_REGION }}
  #     - run: |
  #         echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
  #         commit_hash=`git rev-parse HEAD`
  #         aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
